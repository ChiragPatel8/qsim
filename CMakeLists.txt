set(CMAKE_CXX_STANDARD 11)
cmake_minimum_required(VERSION 3.11)

# Set APPLE_ARM to TRUE if running on Apple Silicon
if(APPLE)
    execute_process(COMMAND uname -m OUTPUT_VARIABLE OSX_ARCH OUTPUT_STRIP_TRAILING_WHITESPACE)
    if (OSX_ARCH STREQUAL "arm64")
        set(APPLE_ARM TRUE)
    else()  # x86_64
        set(APPLE_ARM FALSE)
    endif()
else()
    set(APPLE_ARM FALSE)
endif(APPLE)

# Set the project name and language
if(APPLE)
    project(qsim LANGUAGES CXX)
    find_package(OpenMP REQUIRED)  # Automatically happens for Linux
else()
    execute_process(COMMAND which nvcc OUTPUT_VARIABLE has_nvcc)
    if(has_nvcc STREQUAL "")
        execute_process(COMMAND which hipcc OUTPUT_VARIABLE has_hipcc)
        if(has_hipcc STREQUAL "")
            project(qsim LANGUAGES CXX)
        else()
            project(qsim LANGUAGES CXX HIP)
        endif()
    else()
        project(qsim LANGUAGES CXX CUDA)
    endif()
endif()

# Add subdirectories based on the architecture or available compilers
ADD_SUBDIRECTORY(pybind_interface/basic)
ADD_SUBDIRECTORY(pybind_interface/decide)
if(NOT APPLE_ARM)
    if(NOT has_nvcc STREQUAL "")
        ADD_SUBDIRECTORY(pybind_interface/cuda)
        if(DEFINED ENV{CUQUANTUM_ROOT})
            ADD_SUBDIRECTORY(pybind_interface/custatevec)
        endif()
    elseif(NOT has_hipcc STREQUAL "")
        ADD_SUBDIRECTORY(pybind_interface/hip)
    endif()

    ADD_SUBDIRECTORY(pybind_interface/sse)
    ADD_SUBDIRECTORY(pybind_interface/avx512)
    ADD_SUBDIRECTORY(pybind_interface/avx2)
endif()
